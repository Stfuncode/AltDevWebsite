# Azure DevOps Pipeline for Next.js + Three.js App with Custom Server
trigger:
  branches:
    include:
      - main
      - master

variables:
  nodeVersion: '20.x'
  azureServiceConnectionName: 'AltDevWebsite-ServiceConnection'
  webAppName: 'altdevfrontend'
  resourceGroupName: 'AltDevWebsite'

stages:
- stage: Build
  displayName: 'Build Application'
  jobs:
  - job: BuildJob
    displayName: 'Build Next.js App'
    pool:
      vmImage: 'ubuntu-latest'

    steps:
    - task: NodeTool@0
      displayName: 'Install Node.js'
      inputs:
        versionSpec: '$(nodeVersion)'

    - task: Cache@2
      displayName: 'Cache node_modules'
      inputs:
        key: 'npm | "$(Agent.OS)" | package-lock.json'
        restoreKeys: |
          npm | "$(Agent.OS)"
        path: 'node_modules'

    - script: |
        npm ci
      displayName: 'Install dependencies'

    - script: |
        npm run build
      displayName: 'Build Next.js application'
      env:
        NODE_ENV: production

    - script: |
        echo "=== Verifying Custom Server Setup ==="
        ls -la server.* || echo "‚ùå server file not found!"
        echo "=== Build Output ==="
        ls -la .next/
        echo "=== Static Assets ==="
        ls -la public/ || echo "No public directory"
      displayName: 'Verify build and server files'

    - task: ArchiveFiles@2
      displayName: 'Archive application files'
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)'
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
        replaceExistingArchive: true

    - task: PublishBuildArtifacts@1
      displayName: 'Publish build artifacts'
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
        ArtifactName: 'drop'
        publishLocation: 'Container'

- stage: Deploy
  displayName: 'Deploy to Azure App Service'
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: DeploymentJob
    displayName: 'Deploy to Production'
    pool:
      vmImage: 'ubuntu-latest'
    environment: 'production'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: DownloadBuildArtifacts@0
            displayName: 'Download build artifacts'
            inputs:
              buildType: 'current'
              downloadType: 'single'
              artifactName: 'drop'
              downloadPath: '$(Pipeline.Workspace)'

          - task: AzureWebApp@1
            displayName: 'Deploy Azure Web App'
            inputs:
              azureSubscription: '$(azureServiceConnectionName)'
              appType: 'webAppLinux'
              appName: '$(webAppName)'
              resourceGroupName: '$(resourceGroupName)'
              package: '$(Pipeline.Workspace)/drop/$(Build.BuildId).zip'
              runtimeStack: 'NODE|20-lts'
              startUpCommand: 'npm start'
              appSettings: |
                -WEBSITE_NODE_DEFAULT_VERSION "20.x"
                -NODE_ENV "production"
                -NODE_OPTIONS "--max-old-space-size=4096"
                -PORT "8000"